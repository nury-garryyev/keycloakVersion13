{"version":3,"sources":["../../src/app/util/ParseLink.ts"],"names":["parse","linkHeader","links","split","reduce","acc","link","matcher","match","linkUrl","rel"],"mappings":"AAMA,SAASA,KAAT,CAAeC,UAAf,EAAsD;AACpD,MAAI,CAACA,UAAL,EAAiB,OAAO,EAAP;AACjB,QAAMC,KAAK,GAAGD,UAAU,CAACE,KAAX,CAAiB,OAAjB,CAAd;AACA,SAAOD,KAAK,CAACE,MAAN,CAAoB,CAACC,GAAD,EAAaC,IAAb,KAAqC;AAC9D,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,gBAAX,CAAhB;AACA,QAAI,CAACD,OAAL,EAAc,OAAO,EAAP;AACd,UAAME,OAAO,GAAGF,OAAO,CAAC,CAAD,CAAvB;AACA,UAAMG,GAAG,GAAGH,OAAO,CAAC,CAAD,CAAP,CAAWC,KAAX,CAAiB,2BAAjB,CAAZ;;AACA,QAAIE,GAAJ,EAAS;AACLL,MAAAA,GAAG,CAACK,GAAG,CAAC,CAAD,CAAJ,CAAH,GAAcD,OAAd;AACH;;AACD,WAAOJ,GAAP;AACD,GATM,EASJ,EATI,CAAP;AAUD;;AAED,eAAeL,KAAf","sourcesContent":["\r\nexport interface Links {\r\n  prev?: string;\r\n  next?: string;\r\n}\r\n\r\nfunction parse(linkHeader: string | undefined): Links {\r\n  if (!linkHeader) return {};\r\n  const links = linkHeader.split(/,\\s*</);\r\n  return links.reduce<Links>((acc: Links, link: string): Links => {\r\n    const matcher = link.match(/<?([^>]*)>(.*)/);\r\n    if (!matcher) return {};\r\n    const linkUrl = matcher[1];\r\n    const rel = matcher[2].match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\r\n    if (rel) {\r\n        acc[rel[2]] = linkUrl;\r\n    }\r\n    return acc;\r\n  }, {});\r\n}\r\n\r\nexport default parse;"],"file":"ParseLink.js"}