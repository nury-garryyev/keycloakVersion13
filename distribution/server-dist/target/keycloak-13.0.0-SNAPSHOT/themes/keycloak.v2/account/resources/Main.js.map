{"version":3,"sources":["../src/app/Main.tsx"],"names":["React","ReactDOM","HashRouter","App","flattenContent","initGroupAndItemIds","isExpansion","isModulePageDef","KeycloakService","KeycloakContext","AccountServiceClient","AccountServiceContext","Main","Component","constructor","props","componentDidMount","isReactLoading","toggleReact","render","keycloakService","keycloak","e","createElement","removeHidden","items","visible","item","hidden","eval","push","content","length","pop","loadModule","modulePage","Promise","resolve","reject","console","log","resourceUrl","modulePath","then","module","catch","error","warn","label","message","moduleLoaders","forEach","all","domContainer","document","querySelector"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nimport {App} from './App';\r\nimport {ContentItem, ModulePageDef, flattenContent, initGroupAndItemIds, isExpansion, isModulePageDef} from './ContentPages';\r\n\r\nimport { KeycloakClient, KeycloakService } from './keycloak-service/keycloak.service';\r\nimport { KeycloakContext } from './keycloak-service/KeycloakContext';\r\nimport { AccountServiceClient } from './account-service/account.service';\r\nimport { AccountServiceContext } from './account-service/AccountServiceContext';\r\n\r\ndeclare const keycloak: KeycloakClient;\r\n\r\ndeclare let isReactLoading: boolean;\r\ndeclare function toggleReact(): void;\r\ndeclare const features: { [key: string]: boolean; };\r\n\r\nexport interface MainProps {}\r\nexport class Main extends React.Component<MainProps> {\r\n\r\n    public constructor(props: MainProps) {\r\n        super(props);\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        isReactLoading = false;\r\n        toggleReact();\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        const keycloakService = new KeycloakService(keycloak);\r\n        return (\r\n            <HashRouter>\r\n                <KeycloakContext.Provider value={keycloakService}>\r\n                    <AccountServiceContext.Provider value={new AccountServiceClient(keycloakService)}>\r\n                        <App/>\r\n                    </AccountServiceContext.Provider>\r\n                </KeycloakContext.Provider>\r\n            </HashRouter>\r\n        );\r\n    }\r\n};\r\n\r\ndeclare const resourceUrl: string;\r\ndeclare let content: ContentItem[];\r\nconst e = React.createElement;\r\n\r\nfunction removeHidden(items: ContentItem[]): ContentItem[] {\r\n    const visible: ContentItem[] = [];\r\n\r\n    for (let item of items) {\r\n        if (item.hidden && eval(item.hidden)) continue;\r\n\r\n        if (isExpansion(item)) {\r\n            visible.push(item);\r\n            item.content = removeHidden(item.content);\r\n            if (item.content.length === 0) {\r\n                visible.pop(); // remove empty expansion\r\n            }\r\n        } else {\r\n            visible.push(item);\r\n        }\r\n    }\r\n\r\n    return visible;\r\n}\r\n\r\ncontent = removeHidden(content);\r\ninitGroupAndItemIds();\r\n\r\nfunction loadModule(modulePage: ModulePageDef): Promise<ModulePageDef> {\r\n    return new Promise ((resolve, reject) => {\r\n        console.log('loading: ' + resourceUrl + modulePage.modulePath);\r\n        import(resourceUrl + modulePage.modulePath).then( (module: React.Component) => {\r\n            modulePage.module = module;\r\n            resolve(modulePage);\r\n        }).catch((error: Error) => {\r\n            console.warn('Unable to load ' + modulePage.label + ' because ' + error.message);\r\n            reject(modulePage);\r\n        });\r\n    });\r\n};\r\n\r\nconst moduleLoaders: Promise<ModulePageDef>[] = [];\r\nflattenContent(content).forEach((item: ContentItem) => {\r\n    if (isModulePageDef(item)) {\r\n        moduleLoaders.push(loadModule(item));\r\n    }\r\n});\r\n\r\n// load content modules and start\r\nPromise.all(moduleLoaders).then(() => {\r\n    const domContainer = document.querySelector('#main_react_container');\r\n    ReactDOM.render(e(Main), domContainer);\r\n});"],"file":"Main.js"}