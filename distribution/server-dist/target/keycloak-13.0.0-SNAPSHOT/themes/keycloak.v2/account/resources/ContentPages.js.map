{"version":3,"sources":["../src/app/ContentPages.tsx"],"names":["React","Route","Switch","NavItem","NavExpandable","Msg","PageNotFound","ForbiddenPage","isModulePageDef","item","modulePath","undefined","isExpansion","contentItem","content","groupId","group","itemId","isChildOf","parent","child","createNavItems","activePage","contentParam","groupNum","links","map","navLinkId","id","localize","label","labelParams","page","path","makeNavItems","console","log","setIds","expansionGroupNum","i","length","initGroupAndItemIds","flattenContent","pageDefs","flat","push","makeRoutes","routes","node","createElement","module","componentName","pageDef","component"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {NavItem, NavExpandable} from '@patternfly/react-core';\r\nimport {Msg} from './widgets/Msg';\r\nimport {PageNotFound} from './content/page-not-found/PageNotFound';\r\nimport { ForbiddenPage } from './content/forbidden-page/ForbiddenPage';\r\n\r\nexport interface ContentItem {\r\n    id?: string;\r\n    label: string;\r\n    labelParams?: string[];\r\n    hidden?: string;\r\n    groupId: string; // computed value\r\n    itemId: string; // computed value\r\n};\r\n\r\nexport interface Expansion extends ContentItem {\r\n    content: ContentItem[];\r\n}\r\n\r\nexport interface PageDef extends ContentItem {\r\n    path: string;\r\n}\r\n\r\nexport interface ComponentPageDef extends PageDef {\r\n    component: React.ComponentType;\r\n}\r\n\r\nexport interface ModulePageDef extends PageDef {\r\n    modulePath: string;\r\n    componentName: string;\r\n    module: React.Component; // computed value\r\n}\r\n\r\nexport function isModulePageDef(item: ContentItem): item is ModulePageDef {\r\n    return (item as ModulePageDef).modulePath !== undefined;\r\n}\r\n\r\nexport function isExpansion(contentItem: ContentItem): contentItem is Expansion {\r\n    return (contentItem as Expansion).content !== undefined;\r\n}\r\n\r\ndeclare const content: ContentItem[];\r\n\r\nfunction groupId(group: number): string {\r\n    return 'grp-' + group;\r\n}\r\n\r\nfunction itemId(group: number, item: number): string {\r\n    return 'grp-' + group + '_itm-' + item;\r\n}\r\n\r\nfunction isChildOf(parent: Expansion, child: PageDef): boolean {\r\n    for (var item of parent.content) {\r\n        if (isExpansion(item) && isChildOf(item, child)) return true;\r\n        if (parent.groupId === child.groupId) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction createNavItems(activePage: PageDef, contentParam: ContentItem[], groupNum: number): React.ReactNode {\r\n    if (typeof content === 'undefined') return (<React.Fragment/>);\r\n\r\n    const links: React.ReactElement[] = contentParam.map((item: ContentItem) => {\r\n        const navLinkId = `nav-link-${item.id}`;\r\n        if (isExpansion(item)) {\r\n            return <NavExpandable id={navLinkId}\r\n                                  groupId={item.groupId}\r\n                                  key={item.groupId}\r\n                                  title={Msg.localize(item.label, item.labelParams)}\r\n                                  isExpanded={isChildOf(item, activePage)}>\r\n                        {createNavItems(activePage, item.content, groupNum + 1)}\r\n                    </NavExpandable>\r\n        } else {\r\n            const page: PageDef = item as PageDef;\r\n            return <NavItem id={navLinkId}\r\n                            groupId={item.groupId}\r\n                            itemId={item.itemId}\r\n                            key={item.itemId}\r\n                            to={'#/' + page.path}\r\n                            isActive={activePage.itemId === item.itemId}\r\n                            type=\"button\">\r\n                        {Msg.localize(page.label, page.labelParams)}\r\n                    </NavItem>\r\n        }\r\n    });\r\n\r\n    return (<React.Fragment>{links}</React.Fragment>);\r\n}\r\n\r\nexport function makeNavItems(activePage: PageDef): React.ReactNode {\r\n    console.log({activePage});\r\n    return createNavItems(activePage, content, 0);\r\n}\r\n\r\nfunction setIds(contentParam: ContentItem[], groupNum: number): number {\r\n    if (typeof contentParam === 'undefined') return groupNum;\r\n    let expansionGroupNum = groupNum;\r\n\r\n    for (let i = 0; i < contentParam.length; i++) {\r\n        const item: ContentItem = contentParam[i];\r\n        if (isExpansion(item)) {\r\n            item.itemId = itemId(groupNum, i);\r\n            expansionGroupNum = expansionGroupNum + 1;\r\n            item.groupId = groupId(expansionGroupNum);\r\n            expansionGroupNum = setIds(item.content, expansionGroupNum);\r\n            console.log('currentGroup=' + (expansionGroupNum));\r\n        } else {\r\n            item.groupId = groupId(groupNum);\r\n            item.itemId = itemId(groupNum, i);\r\n        }\r\n    };\r\n\r\n    return expansionGroupNum;\r\n}\r\n\r\nexport function initGroupAndItemIds(): void {\r\n    setIds(content, 0);\r\n    console.log({content});\r\n}\r\n\r\n// get rid of Expansions and put all PageDef items into a single array\r\nexport function flattenContent(pageDefs: ContentItem[]): PageDef[] {\r\n    const flat: PageDef[] = [];\r\n\r\n    for (let item of pageDefs) {\r\n        if (isExpansion(item)) {\r\n            flat.push(...flattenContent(item.content));\r\n        } else {\r\n            flat.push(item as PageDef);\r\n        }\r\n    }\r\n\r\n    return flat;\r\n}\r\n\r\nexport function makeRoutes(): React.ReactNode {\r\n    if (typeof content === 'undefined') return (<span/>);\r\n\r\n    const pageDefs: PageDef[] = flattenContent(content);\r\n\r\n    const routes: React.ReactElement<Route>[] = pageDefs.map((page: PageDef) => {\r\n        if (isModulePageDef(page)) {\r\n            const node: React.ReactNode = React.createElement(page.module[page.componentName], {'pageDef': page});\r\n            return <Route key={page.itemId} path={'/' + page.path} exact render={() => node} />;\r\n        } else {\r\n            const pageDef: ComponentPageDef = page as ComponentPageDef;\r\n            return <Route key={page.itemId} path={'/' + page.path} exact component={pageDef.component}/>;\r\n        }\r\n    });\r\n\r\n    return (<Switch>\r\n                {routes}\r\n                <Route path=\"/forbidden\" component={ForbiddenPage}/>\r\n                <Route component={PageNotFound}/>\r\n            </Switch>);\r\n}\r\n"],"file":"ContentPages.js"}