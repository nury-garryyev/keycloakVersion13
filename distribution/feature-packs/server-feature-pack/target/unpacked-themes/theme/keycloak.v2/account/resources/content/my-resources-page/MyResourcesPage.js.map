{"version":3,"sources":["../../../src/app/content/my-resources-page/MyResourcesPage.tsx"],"names":["React","parse","Button","Level","LevelItem","Stack","StackItem","Tab","Tabs","TextInput","AccountServiceContext","Scope","ResourcesTable","ContentPage","Msg","SharedResourcesTable","MY_RESOURCES_TAB","SHARED_WITH_ME_TAB","MyResourcesPage","Component","constructor","props","context","scope","name","displayName","state","myResources","data","forEach","resource","fetchShareRequests","response","doGet","resources","pendingRequest","sharedWithMe","_id","shareRequests","username","scopes","forceUpdate","value","setState","nameFilter","fetchFilteredResources","fetchInitialResources","isSharedWithMeTab","fetchResources","nextUrl","prevUrl","event","tabIndex","activeTabKey","isModalOpen","hasNext","hasPrevious","first","max","params","url","extraParams","then","map","makeScopeObj","parseResourceResponse","fetchPending","fetchPermissionRequests","length","links","headers","get","undefined","parsed","next","prev","makeTab","eventKey","title","sharedResourcesTab","localize","handleFilterRequest","render","bind","handleTabClick","handlePreviousClick","handleFirstPageClick","handleNextClick","clearNextPrev","newMyResources"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport parse from '../../util/ParseLink';\r\n\r\nimport { Button, Level, LevelItem, Stack, StackItem, Tab, Tabs, TextInput } from '@patternfly/react-core';\r\n\r\nimport {HttpResponse} from '../../account-service/account.service';\r\nimport {AccountServiceContext} from '../../account-service/AccountServiceContext';\r\n\r\nimport { PaginatedResources, Resource, Scope, Permission } from './resource-model';\r\nimport {ResourcesTable} from './ResourcesTable';\r\nimport {ContentPage} from '../ContentPage';\r\nimport {Msg} from '../../widgets/Msg';\r\nimport { SharedResourcesTable } from './SharedResourcesTable';\r\n\r\nexport interface MyResourcesPageProps {\r\n}\r\n\r\nexport interface MyResourcesPageState {\r\n    activeTabKey: number;\r\n    isModalOpen: boolean;\r\n    nameFilter: string;\r\n    myResources: PaginatedResources;\r\n    sharedWithMe: PaginatedResources;\r\n}\r\n\r\nconst MY_RESOURCES_TAB = 0;\r\nconst SHARED_WITH_ME_TAB = 1;\r\n\r\nexport class MyResourcesPage extends React.Component<MyResourcesPageProps, MyResourcesPageState> {\r\n    static contextType = AccountServiceContext;\r\n    context: React.ContextType<typeof AccountServiceContext>;\r\n    private first = 0;\r\n    private max = 5;\r\n\r\n    public constructor(props: MyResourcesPageProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n        super(props);\r\n        this.context = context;\r\n\r\n        this.state = {\r\n            activeTabKey: MY_RESOURCES_TAB,\r\n            nameFilter: '',\r\n            isModalOpen: false,\r\n            myResources: {nextUrl: '', prevUrl: '', data: []},\r\n            sharedWithMe: {nextUrl: '', prevUrl: '', data: []}\r\n        };\r\n\r\n        this.fetchInitialResources();\r\n    }\r\n\r\n    private isSharedWithMeTab(): boolean {\r\n        return this.state.activeTabKey === SHARED_WITH_ME_TAB;\r\n    }\r\n\r\n    private hasNext(): boolean {\r\n        if (this.isSharedWithMeTab()) {\r\n            return (this.state.sharedWithMe.nextUrl !== null) && (this.state.sharedWithMe.nextUrl !== '');\r\n        } else {\r\n            return (this.state.myResources.nextUrl !== null) && (this.state.myResources.nextUrl !== '');\r\n        }\r\n    }\r\n\r\n    private hasPrevious(): boolean {\r\n        if (this.isSharedWithMeTab()) {\r\n            return (this.state.sharedWithMe.prevUrl !== null) && (this.state.sharedWithMe.prevUrl !== '');\r\n        } else {\r\n            return (this.state.myResources.prevUrl !== null) && (this.state.myResources.prevUrl !== '');\r\n        }\r\n    }\r\n\r\n    private fetchInitialResources(): void {\r\n        if (this.isSharedWithMeTab()) {\r\n            this.fetchResources(\"/resources/shared-with-me\");\r\n        } else {\r\n            this.fetchResources(\"/resources\", {first: this.first, max: this.max});\r\n        }\r\n    }\r\n\r\n    private fetchFilteredResources(params: Record<string, string|number>): void {\r\n        if (this.isSharedWithMeTab()) {\r\n            this.fetchResources(\"/resources/shared-with-me\", params);\r\n        } else {\r\n            this.fetchResources(\"/resources\", {...params, first: this.first, max: this.max});\r\n        }\r\n    }\r\n\r\n    private fetchResources(url: string, extraParams?: Record<string, string|number>): void {\r\n        this.context!.doGet<Resource[]>(url, {params: extraParams})\r\n            .then((response: HttpResponse<Resource[]>) => {\r\n                const resources: Resource[] = response.data || [];\r\n                resources.forEach((resource: Resource) => resource.shareRequests = []);\r\n\r\n                // serialize the Scope objects from JSON so that toString() will work.\r\n                resources.forEach((resource: Resource) => resource.scopes = resource.scopes.map(this.makeScopeObj));\r\n\r\n                if (this.isSharedWithMeTab()) {\r\n                    this.setState({sharedWithMe: this.parseResourceResponse(response)}, this.fetchPending);\r\n                } else {\r\n                    this.setState({myResources: this.parseResourceResponse(response)}, this.fetchPermissionRequests);\r\n                }\r\n            });\r\n    }\r\n\r\n    private makeScopeObj = (scope: Scope): Scope => {\r\n        return new Scope(scope.name, scope.displayName);\r\n    }\r\n\r\n    private fetchPermissionRequests = () => {\r\n        this.state.myResources.data.forEach((resource: Resource) => {\r\n            this.fetchShareRequests(resource);\r\n        });\r\n    }\r\n\r\n    private fetchShareRequests(resource: Resource): void {\r\n        this.context!.doGet('/resources/' + resource._id + '/permissions/requests')\r\n            .then((response: HttpResponse<Permission[]>) => {\r\n                resource.shareRequests = response.data || [];\r\n                if (resource.shareRequests.length > 0) {\r\n                    this.forceUpdate();\r\n                }\r\n            });\r\n    }\r\n\r\n    private fetchPending = async () => {\r\n        const response: HttpResponse<Resource[]> = await this.context!.doGet(`/resources/pending-requests`);\r\n        const resources: Resource[] = response.data || [];\r\n        resources.forEach((pendingRequest: Resource) => {\r\n            this.state.sharedWithMe.data.forEach(resource => {\r\n                if (resource._id === pendingRequest._id) {\r\n                    resource.shareRequests = [{username: 'me', scopes: pendingRequest.scopes}]\r\n                    this.forceUpdate();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private parseResourceResponse(response: HttpResponse<Resource[]>): PaginatedResources {\r\n        const links: string | undefined = response.headers.get('link') || undefined;\r\n        const parsed = parse(links);\r\n\r\n        let next = '';\r\n        let prev = '';\r\n\r\n        if (parsed !== null) {\r\n            if (parsed.next) next = parsed.next;\r\n            if (parsed.prev) prev = parsed.prev;\r\n        }\r\n\r\n        const resources: Resource[] = response.data || [];\r\n\r\n        return {nextUrl: next, prevUrl: prev, data: resources};\r\n    }\r\n\r\n    private makeTab(eventKey: number, title: string, resources: PaginatedResources, sharedResourcesTab: boolean): React.ReactNode {\r\n        return (\r\n            <Tab id={title} eventKey={eventKey} title={Msg.localize(title)}>\r\n                <Stack gutter=\"md\">\r\n                    <StackItem isFilled><span/></StackItem>\r\n                    <StackItem isFilled>\r\n                        <Level gutter='md'>\r\n                            <LevelItem>\r\n                                <TextInput value={this.state.nameFilter} onChange={this.handleFilterRequest} id={'filter-' + title} type=\"text\" placeholder={Msg.localize('filterByName')} />\r\n                            </LevelItem>\r\n                        </Level>\r\n                    </StackItem>\r\n                    <StackItem isFilled>\r\n                        {!sharedResourcesTab && <ResourcesTable resources={resources}/>}\r\n                        {sharedResourcesTab && <SharedResourcesTable resources={resources}/>}\r\n                    </StackItem>\r\n                </Stack>\r\n            </Tab>\r\n        )\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        return (\r\n            <ContentPage title=\"resources\" onRefresh={this.fetchInitialResources.bind(this)}>\r\n                <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\r\n                    {this.makeTab(0, 'myResources', this.state.myResources, false)}\r\n                    {this.makeTab(1, 'sharedwithMe', this.state.sharedWithMe, true)}\r\n                </Tabs>\r\n\r\n                <Level gutter='md'>\r\n                    <LevelItem>\r\n                        {this.hasPrevious() && <Button onClick={this.handlePreviousClick}>&lt;<Msg msgKey='previousPage'/></Button>}\r\n                    </LevelItem>\r\n\r\n                    <LevelItem>\r\n                        {this.hasPrevious() && <Button onClick={this.handleFirstPageClick}><Msg msgKey='firstPage'/></Button>}\r\n                    </LevelItem>\r\n\r\n                    <LevelItem>\r\n                        {this.hasNext() && <Button onClick={this.handleNextClick}><Msg msgKey='nextPage'/>&gt;</Button>}\r\n                    </LevelItem>\r\n                </Level>\r\n            </ContentPage>\r\n        );\r\n    }\r\n\r\n    private handleFilterRequest = (value: string) => {\r\n        this.setState({nameFilter: value});\r\n        this.fetchFilteredResources({name: value});\r\n    }\r\n\r\n    private clearNextPrev(): void {\r\n        const newMyResources: PaginatedResources = this.state.myResources;\r\n        newMyResources.nextUrl = '';\r\n        newMyResources.prevUrl = '';\r\n        this.setState({myResources: newMyResources});\r\n    }\r\n\r\n    private handleFirstPageClick = () => {\r\n        this.fetchInitialResources();\r\n    }\r\n\r\n    private handleNextClick = () => {\r\n        if (this.isSharedWithMeTab()) {\r\n            this.fetchResources(this.state.sharedWithMe.nextUrl);\r\n        } else {\r\n            this.fetchResources(this.state.myResources.nextUrl);\r\n        }\r\n    }\r\n\r\n    private handlePreviousClick = () => {\r\n        if (this.isSharedWithMeTab()) {\r\n            this.fetchResources(this.state.sharedWithMe.prevUrl);\r\n        } else {\r\n            this.fetchResources(this.state.myResources.prevUrl);\r\n        }\r\n    }\r\n\r\n    private handleTabClick = (event: React.MouseEvent<HTMLInputElement>, tabIndex: number) => {\r\n        if (this.state.activeTabKey === tabIndex) return;\r\n\r\n        this.setState({\r\n            nameFilter: '',\r\n            activeTabKey: tabIndex\r\n        }, () => {this.fetchInitialResources()});\r\n    };\r\n};\r\n"],"file":"MyResourcesPage.js"}