{"version":3,"sources":["../../../src/app/content/my-resources-page/SharedResourcesTable.tsx"],"names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListItemCells","ChipGroup","ChipGroupToolbarItem","Chip","RepositoryIcon","Msg","AbstractResourcesTable","EmptyMessageState","SharedResourcesTable","constructor","props","state","permissions","Map","render","resources","data","length","localize","map","resource","row","name","client","baseUrl","getClientName","scopes","scope","displayName","shareRequests"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as React from 'react';\r\n\r\nimport {\r\n    DataList,\r\n    DataListItem,\r\n    DataListItemRow,\r\n    DataListCell,\r\n    DataListItemCells,\r\n    ChipGroup,\r\n    ChipGroupToolbarItem,\r\n    Chip\r\n  } from '@patternfly/react-core';\r\nimport { RepositoryIcon } from '@patternfly/react-icons';\r\n\r\n\r\nimport { PaginatedResources, Resource, Scope } from \"./resource-model\";\r\nimport { Msg } from '../../widgets/Msg';\r\nimport { AbstractResourcesTable, ResourcesTableState } from './AbstractResourceTable';\r\nimport EmptyMessageState from '../../widgets/EmptyMessageState';\r\n\r\nexport interface ResourcesTableProps {\r\n    resources: PaginatedResources;\r\n    noResourcesMessage: string;\r\n}\r\n\r\nexport class SharedResourcesTable extends AbstractResourcesTable<ResourcesTableState> {\r\n\r\n    public constructor(props: ResourcesTableProps) {\r\n        super(props);\r\n        this.state = {\r\n            permissions: new Map()\r\n        }\r\n    }\r\n\r\n    public render(): React.ReactNode {\r\n        if (this.props.resources.data.length === 0) {\r\n            return (\r\n                <EmptyMessageState icon={RepositoryIcon} messageKey=\"noResourcesSharedWithYou\"/>\r\n            );\r\n        }\r\n        return (\r\n            <DataList aria-label={Msg.localize('resources')} id=\"sharedResourcesList\">\r\n                <DataListItem key='resource-header' aria-labelledby='resource-header'>\r\n                    <DataListItemRow>\r\n                        <DataListItemCells\r\n                            dataListCells={[\r\n                                <DataListCell key='resource-name-header' width={2}>\r\n                                    <strong><Msg msgKey='resourceName'/></strong>\r\n                                </DataListCell>,\r\n                                <DataListCell key='application-name-header' width={2}>\r\n                                    <strong><Msg msgKey='application'/></strong>\r\n                                </DataListCell>,\r\n                                <DataListCell key='permission-header' width={2}/>,\r\n                                <DataListCell key='requests-header' width={2}/>,\r\n                            ]}\r\n                        />\r\n                    </DataListItemRow>\r\n                </DataListItem>\r\n                {this.props.resources.data.map((resource: Resource, row: number) => (\r\n                    <DataListItem key={'resource-' + row} aria-labelledby={resource.name}>\r\n                        <DataListItemRow>\r\n                            <DataListItemCells\r\n                                dataListCells={[\r\n                                    <DataListCell key={'resourceName-' + row} width={2}>\r\n                                        <Msg msgKey={resource.name}/>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'resourceClient-' + row} width={2}>\r\n                                        <a href={resource.client.baseUrl}>{this.getClientName(resource.client)}</a>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'permissions-' + row} width={2}>\r\n                                        { resource.scopes.length > 0 &&\r\n                                        <ChipGroup withToolbar>\r\n                                            <ChipGroupToolbarItem key='permissions' categoryName={Msg.localize('permissions')}>\r\n                                                {\r\n                                                    resource.scopes.map(scope => (\r\n                                                        <Chip key={scope.name} isReadOnly>\r\n                                                            {scope.displayName || scope.name}\r\n                                                        </Chip>\r\n                                                    ))\r\n                                                }\r\n                                            </ChipGroupToolbarItem>\r\n                                        </ChipGroup>}\r\n                                    </DataListCell>,\r\n                                    <DataListCell key={'pending-' + row} width={2}>\r\n                                        {resource.shareRequests.length > 0 &&\r\n                                        <ChipGroup withToolbar>\r\n                                            <ChipGroupToolbarItem key='permissions' categoryName={Msg.localize('pending')}>\r\n                                                {\r\n                                                    (resource.shareRequests[0].scopes as Scope[]).map(scope => (\r\n                                                        <Chip key={scope.name} isReadOnly>\r\n                                                            {scope.displayName || scope.name}\r\n                                                        </Chip>\r\n                                                    ))\r\n                                                }\r\n                                            </ChipGroupToolbarItem>\r\n                                        </ChipGroup>\r\n                                        }\r\n                                    </DataListCell>\r\n                                ]}\r\n                            />\r\n                        </DataListItemRow>\r\n                    </DataListItem>\r\n                ))}\r\n            </DataList>\r\n        );\r\n    }\r\n}"],"file":"SharedResourcesTable.js"}