{"version":3,"sources":["../../src/app/util/RedirectUri.ts"],"names":["createRedirect","currentLocation","redirectUri","baseUrl","referrer","referrerUri","replace","encodeURIComponent"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAqBA;;;;;;;AAOA,OAAO,MAAMA,cAAc,GAAIC,eAAD,IAAqC;AAC/D,MAAIC,WAAmB,GAAGC,OAA1B;;AAEA,MAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjC;AACA;AACA;AACA;AACA;AACAF,IAAAA,WAAW,IAAI,eAAeE,QAAf,GAA0B,gBAA1B,GAA6CC,WAAW,CAACC,OAAZ,CAAoB,GAApB,EAAyB,QAAzB,CAA5D;AACH;;AAED,SAAOC,kBAAkB,CAACL,WAAD,CAAlB,GAAkCK,kBAAkB,CAAC,OAAON,eAAR,CAA3D;AACH,CAbM","sourcesContent":["/*\r\n * Copyright 2019 Red Hat, Inc. and/or its affiliates\r\n * and other contributors as indicated by the @author tags.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\ndeclare const baseUrl: string;\r\ndeclare const referrer: string;\r\ndeclare const referrerUri: string;\r\n\r\n/**\r\n * Create a redirect uri that can return to this application with referrer and referrer_uri intact.\r\n * \r\n * @param currentLocation The ReactRouter location to return to.\r\n *  \r\n * @author Stan Silvert\r\n */\r\nexport const createRedirect = (currentLocation: string): string => {\r\n    let redirectUri: string = baseUrl;\r\n    \r\n    if (typeof referrer !== 'undefined') {\r\n        // '_hash_' is a workaround for when uri encoding is not\r\n        // sufficient to escape the # character properly.\r\n        // The problem is that both the redirect and the application URL contain a hash.\r\n        // The browser will consider anything after the first hash to be client-side.  So\r\n        // it sees the hash in the redirect param and stops.\r\n        redirectUri += \"?referrer=\" + referrer + \"&referrer_uri=\" + referrerUri.replace('#', '_hash_');\r\n    }\r\n\r\n    return encodeURIComponent(redirectUri) + encodeURIComponent(\"/#\" + currentLocation);    \r\n}"],"file":"RedirectUri.js"}