{"version":3,"sources":["../../../src/app/content/my-resources-page/PermissionRequest.tsx"],"names":["React","Button","Modal","Text","Badge","DataListItem","DataList","TextVariants","DataListItemRow","DataListItemCells","DataListCell","Chip","Split","SplitItem","UserCheckIcon","AccountServiceContext","Msg","ContentAlert","PermissionRequest","Component","constructor","props","context","shareRequest","index","handle","username","scopes","resource","shareRequests","splice","approve","id","_id","handleToggleDialog","permissionsRequest","doGet","permissions","data","foundPermission","find","p","userScopes","push","doPut","success","localize","onClose","e","console","error","setState","isOpen","state","render","name","replace","length","map","i","firstName","lastName","small","email","scope","j","handleApprove","handleDeny","row"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport * as React from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Text,\r\n    Badge,\r\n    DataListItem,\r\n    DataList,\r\n    TextVariants,\r\n    DataListItemRow,\r\n    DataListItemCells,\r\n    DataListCell,\r\n    Chip,\r\n    Split,\r\n    SplitItem\r\n} from '@patternfly/react-core';\r\nimport { UserCheckIcon } from '@patternfly/react-icons';\r\n\r\nimport { HttpResponse } from '../../account-service/account.service';\r\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\r\nimport { Msg } from '../../widgets/Msg';\r\nimport { ContentAlert } from '../ContentAlert';\r\nimport { Resource, Scope, Permission } from './resource-model';\r\n\r\n\r\ninterface PermissionRequestProps {\r\n    resource: Resource;\r\n    onClose: () => void;\r\n}\r\n\r\ninterface PermissionRequestState {\r\n    isOpen: boolean;\r\n}\r\n\r\nexport class PermissionRequest extends React.Component<PermissionRequestProps, PermissionRequestState> {\r\n    protected static defaultProps = { permissions: [], row: 0 };\r\n    static contextType = AccountServiceContext;\r\n    context: React.ContextType<typeof AccountServiceContext>;\r\n\r\n    public constructor(props: PermissionRequestProps, context: React.ContextType<typeof AccountServiceContext>) {\r\n        super(props);\r\n        this.context = context;\r\n    \r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n    }\r\n\r\n    private handleApprove = async (shareRequest: Permission, index: number) => {\r\n        this.handle(shareRequest.username, shareRequest.scopes as Scope[], true);\r\n        this.props.resource.shareRequests.splice(index, 1);\r\n    };\r\n\r\n    private handleDeny = async (shareRequest: Permission, index: number) => {\r\n        this.handle(shareRequest.username, shareRequest.scopes as Scope[]);\r\n        this.props.resource.shareRequests.splice(index, 1)\r\n    };\r\n\r\n    private handle = async (username: string, scopes: Scope[], approve: boolean = false) => {\r\n        const id = this.props.resource._id\r\n        this.handleToggleDialog();\r\n\r\n        const permissionsRequest: HttpResponse<Permission[]> = await this.context!.doGet(`/resources/${id}/permissions`);\r\n        const permissions = permissionsRequest.data || [];\r\n        const foundPermission = permissions.find(p => p.username === username);\r\n        const userScopes = foundPermission ? (foundPermission.scopes as Scope[]): [];\r\n        if (approve) {\r\n            userScopes.push(...scopes);\r\n        }\r\n        try {\r\n            await this.context!.doPut(`/resources/${id}/permissions`, [{ username: username, scopes: userScopes }] )\r\n            ContentAlert.success(Msg.localize('shareSuccess'));\r\n            this.props.onClose();\r\n        } catch (e) {\r\n            console.error('Could not update permissions', e.error);\r\n        }\r\n    };\r\n\r\n    private handleToggleDialog = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    public render(): React.ReactNode {\r\n        const id = `shareRequest-${this.props.resource.name.replace(/\\s/, '-')}`;\r\n        return (\r\n            <React.Fragment>\r\n                <Button id={id} variant=\"link\" onClick={this.handleToggleDialog}>\r\n                    <UserCheckIcon size=\"lg\" />\r\n                    <Badge>{this.props.resource.shareRequests.length}</Badge>\r\n                </Button>\r\n\r\n                <Modal\r\n                    id={`modal-${id}`}\r\n                    title={Msg.localize('permissionRequests') + ' - ' + this.props.resource.name}\r\n                    isLarge={true}\r\n                    isOpen={this.state.isOpen}\r\n                    onClose={this.handleToggleDialog}\r\n                    actions={[\r\n                        <Button id={`close-${id}`} key=\"close\" variant=\"link\" onClick={this.handleToggleDialog}>\r\n                            <Msg msgKey=\"close\" />\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <DataList aria-label={Msg.localize('permissionRequests')}>\r\n                        <DataListItemRow>\r\n                            <DataListItemCells\r\n                                dataListCells={[\r\n                                    <DataListCell key='permissions-name-header' width={5}>\r\n                                        <strong>Requestor</strong>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key='permissions-requested-header' width={5}>\r\n                                        <strong><Msg msgKey='permissionRequests' /></strong>\r\n                                    </DataListCell>,\r\n                                    <DataListCell key='permission-request-header' width={5}>\r\n                                    </DataListCell>\r\n                                ]}\r\n                            />\r\n                        </DataListItemRow>\r\n                        {this.props.resource.shareRequests.map((shareRequest, i) =>\r\n                            <DataListItem key={i} aria-labelledby=\"requestor\">\r\n                                <DataListItemRow>\r\n                                    <DataListItemCells\r\n                                        dataListCells={[\r\n                                            <DataListCell id={`requestor${i}`} key={`requestor${i}`}>\r\n                                                <span>\r\n                                                    {shareRequest.firstName} {shareRequest.lastName} {shareRequest.lastName ? '' : shareRequest.username}\r\n                                                </span><br />\r\n                                                <Text component={TextVariants.small}>{shareRequest.email}</Text>\r\n                                            </DataListCell>,\r\n                                            <DataListCell id={`permissions${i}`} key={`permissions${i}`}>\r\n                                                {(shareRequest.scopes as Scope[]).map((scope, j) => <Chip key={j} isReadOnly>{scope}</Chip>)}\r\n                                            </DataListCell>,\r\n                                            <DataListCell key={`actions${i}`}>\r\n                                                <Split gutter=\"sm\">\r\n                                                    <SplitItem>\r\n                                                        <Button\r\n                                                            id={`accept-${i}-${id}`}\r\n                                                            onClick={() => this.handleApprove(shareRequest, i)}\r\n                                                        >\r\n                                                            Accept\r\n                                                        </Button>\r\n                                                    </SplitItem>\r\n                                                    <SplitItem>\r\n                                                        <Button\r\n                                                            id={`deny-${i}-${id}`}\r\n                                                            variant=\"danger\"\r\n                                                            onClick={() => this.handleDeny(shareRequest, i)}\r\n                                                        >\r\n                                                            Deny\r\n                                                        </Button>\r\n                                                    </SplitItem>\r\n                                                </Split>\r\n                                            </DataListCell>\r\n                                        ]}\r\n                                    />\r\n                                </DataListItemRow>\r\n                            </DataListItem>\r\n                        )}\r\n                    </DataList>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"],"file":"PermissionRequest.js"}